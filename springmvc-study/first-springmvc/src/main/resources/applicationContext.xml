<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- context:component-scan标签作用
        在Spring IoC初始化过程中，自动创生并营理com.imooc.springmvc及子包中
        拥有以下注解的对象.
        @Repository
        @Service
        @Controller
        @Component
    -->
    <context:component-scan base-package="com.imooc.springmvc"/>

    <!-- 启用Spring MVC的注解开发模式 -->
    <mvc:annotation-driven conversion-service="conversionService">
        <!-- 消息转换器, 可以对响应的消息进行调整 -->
        <mvc:message-converters>
            <!-- 对http中的响应消息的文本进行转换 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- servlet中是response.setContentType("text/html;charset=utf-8")
                            mvc底层以参数的形式暴露出来, 底层也是这个语句-->
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 将图片/JS/CSS等静态资源排除在外，可提高执行效率 -->
    <mvc:default-servlet-handler/>

    <!-- 通知Spring MVC有哪些自定义的转换类 -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.imooc.springmvc.convert.MyDateConvertor"/>
            </set>
        </property>
    </bean>

    <!-- freemarker -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--设置响应输出，并解决中文乱码-->
        <property name="contentType" value="text/html;charset=utf-8"/>
        <!--指定Freemarker模板文件扩展名, 后续就不需要写扩展名了, suffix: 后缀-->
        <property name="suffix" value=".ftl"/>
    </bean>


    <!--配置Freemarker参数-->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--设置模板保存的目录-->
        <property name="templateLoaderPath" value="/WEB-INF/ftl"/>
        <!--其他模板引擎设置-->
        <property name="freemarkerSettings">
            <props>
                <!--设置Freemarker脚本与数据渲染时使用的字符集-->
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>

</beans>